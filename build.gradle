// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.detekt = '1.2.0'
    ext.kotlin_version = '1.3.61'
    ext.gradle_version = '3.5.3'
    ext.google_services_version = '4.3.3'
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.gms:google-services:$google_services_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.2.1"
}

allprojects {
    repositories {
        google()
        jcenter()
    }
    ext {
        androidLibs = [
                appcompat           : 'androidx.appcompat:appcompat:1.1.0',
                recyclerview        : 'androidx.recyclerview:recyclerview:1.0.0',
                constraintLayout    : 'androidx.constraintlayout:constraintlayout:1.1.3',
                material            : 'com.google.android.material:material:1.2.0-alpha05',
                firebaseAuth        : 'com.google.firebase:firebase-auth:19.2.0',
                firebaseAnalytics   : 'com.google.firebase:firebase-analytics:17.2.1',
                annotation          : 'androidx.annotation:annotation:1.1.0',
                lifecycle           : 'android.arch.lifecycle:extensions:1.1.1'
        ]

        detektPlugin = [
                detektPlugins       : "io.gitlab.arturbosch.detekt:detekt-formatting:1.2.1"
        ]

        androidKtxLibs = [
                androidxCore        : 'androidx.core:core-ktx:1.2.0',
                fragment            : 'androidx.fragment:fragment-ktx:1.2.2',
                lifecycleViewModel  : 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0',
        ]

        androidKaptLibs = [
                glideCompiler       : 'com.github.bumptech.glide:compiler:4.10.0'
        ]

        kotlinLibs = [
                stdlib    : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutines: 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3',
                arrow     : 'io.arrow-kt:arrow-core-data:0.10.3',
        ]

        libs = [
                circleimageview          : 'de.hdodenhof:circleimageview:3.0.0',
                glide                    : 'com.github.bumptech.glide:glide:4.10.0',
                retrofit                 : 'com.squareup.retrofit2:retrofit:2.6.0',
                retrofitGsonConverter    : 'com.squareup.retrofit2:converter-gson:2.6.0',
                retrofitCoroutinesAdapter: 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2',
                koin                     : "org.koin:koin-android-viewmodel:2.0.1"
        ]

        testLibs = [
                junit        : 'junit:junit:4.12',
                mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
                mockitoInline: "org.mockito:mockito-inline:2.28.2",
                koinTest     : 'org.koin:koin-test:2.0.1'
        ]

        androidxTestLibs = [
                archCoreTesting: 'android.arch.core:core-testing:1.1.1'
        ]

        androidTestLibs = [
                testRunner   : 'androidx.test:runner:1.2.0',
                espresso     : 'androidx.test.espresso:espresso-contrib:3.2.0',
                espressoCore : 'androidx.test.espresso:espresso-core:3.2.0',
                rules        : 'androidx.test:rules:1.2.0',
                extJunit     : 'androidx.test.ext:junit:1.1.1',
                koinTest     : 'org.koin:koin-test:2.0.1',
                mockWebServer: 'com.squareup.okhttp3:mockwebserver:4.2.1',
                okhttpIdling : 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
        ]
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}


detekt {
    toolVersion = "1.2.1"
    input = files("$projectDir")
    config = files("$project.projectDir/config/detekt/detekt.yml")
    reports {
        html {
            enabled = true
            destination = file("$project.projectDir/detekt-report.html")
        }
    }
}